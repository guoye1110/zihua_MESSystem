using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using System.Windows.Forms;
using LabelPrint.Util;
using LabelPrint.Data;
using LabelPrint.excelOuput;
//using LabelPrint.excelOuput;
namespace LabelPrint
{
    public partial class CutSystemForm : Form
    {
        CutSysData PSysData;
        public CutSystemForm()
        {
            InitializeComponent();
        }

        private void button1_Click(object sender, EventArgs e)
        {

        }
        /*
         * 分切清单报表界面支持已完成分切单的查询功能，界面以列表形式显示、查看，并且支持驱动打印机A4纸张打印。
         */
        private void dataGridView1_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {
        
        }

        /*
         * 当该小卷为不合格品时，产品质量栏位需显示不合格分类编码，如“图 5 分切打印中的问题点选择”中的A/B/C/D/DC/E/W。
         * 
         * Quality Problem:
         * A.晶点孔洞
         * B.厚薄暴筋
         * C.折皱
         * D.端面错位(毛糙）
         * DC待处理
         * E.油污
         * W.蚊虫
         * 
         */
        DataTable dt;
        private void CutSystemForm_Load(object sender, EventArgs e)
        {
            PSysData = new CutSysData();

            this.Icon = new Icon("..\\..\\resources\\zihualogo_48X48.ico");
            dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect;
            dataGridView1.ReadOnly = true;

            PSysData.SetDateTimePickerFormat(this.dateTimePicker1, this.dateTimePicker2);
            UpdateUserInput();
            dt = PSysData.UpdateDBViewBy2Date(dataGridView1);

            dataGridView1_widthSetting(dataGridView1);
        }

        private void bt_New_Click(object sender, EventArgs e)
        {
            ProductCutForm f = new ProductCutForm();
            f.ShowDialog();
            dt = PSysData.UpdateDBViewBy2Date(dataGridView1);
        }

        void UpdateUserInput()
        {
            PSysData.Date1 = dateTimePicker1.Value.ToString("yyyy-MM-dd");
            PSysData.Date2 = dateTimePicker2.Value.ToString("yyyy-MM-dd");
            PSysData.BatchNo = tb_Batchno.Text;
            PSysData.ProductCode = tb_ProductCode.Text;
            PSysData.BigRollNo = tb_BigRollNo.Text;
            PSysData.LittleRollNo = tb_LittleRollNo.Text;
            PSysData.Customer = tb_Customer.Text;
            PSysData.Recipe = tb_Recipe.Text;
            PSysData.PlateNo = tb_PlateNo.Text;
        }



        private void button1_Click_1(object sender, EventArgs e)
        {
            UpdateUserInput();
            dt = PSysData.UpdateDBViewBySelection(dataGridView1);
        }

        private void button2_Click(object sender, EventArgs e)
        {
            
            PSysData.PrintBangMaReport(dt); 
            excelClass excelClassImpl = new excelClass();
            excelClassImpl.weightListFunc();

        }

        private void dataGridView1_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
                        
            PSysData.RowIndex = e.RowIndex;
            DataTable dt = PSysData.CurDT;
            if (PSysData.RowIndex < 0 || PSysData.RowIndex >= dt.Rows.Count)
                return;

            int id = (int)dt.Rows[PSysData.RowIndex][0];

            CutEditorForm f = new CutEditorForm();
            f.SetSelItem(dt, id);
            f.ShowDialog();
            dt = PSysData.UpdateDBViewBy2Date(dataGridView1);
        }

        private void dataGridView1_widthSetting(DataGridView dataGridView1)
        {
            int i;
            int [] gridColumnWidth = {60, 100, 90, 100, 150, 120, 150, 100, 90, 90, 100, 100, 120, 100,370};
            if (dataGridView1.Columns.Count > 0) { 
            for (i = 0; i < gridColumnWidth.Length; i++ )
                dataGridView1.Columns[i].Width = gridColumnWidth[i];
            }
        }

        private void button3_Click(object sender, EventArgs e)
        {
            
            excelClass excelClassImpl = new excelClass();
            excelClassImpl.weightListFunc();
        }

        private void button4_Click(object sender, EventArgs e)
        {

        }

        private void button3_Click_1(object sender, EventArgs e)
        {
            PSysData.PrintSplitCutDailyReport(dt);

            excelClass excelClassImpl = new excelClass();
            excelClassImpl.slitReportFunc();
        }

        /*
         * 分切清单界面还可以根据标签的生产批号/产品编号/大卷号/小卷号/客户编号/配方号进行查询，列表显示。
         */

    }
}
